{"type":"deployment","id":"CrossChainGovernanceSender","batch":"CCIP","deploymentAddress":"0x2082f3aDfcA943286cdB7BF8cF308dd138172392","constructorArgs":["0x1035CabC275068e0F4b745A29CEDf38E13aF41b1"],"to":"0x4e59b44847b379578588920ca78fbf26c0b4956c","value":"0","data":"0x00000000000000000000000000000000000000000000000050494e47504f4e4760a03461007057601f61065738819003918201601f19168301916001600160401b038311848410176100755780849260209460405283398101031261007057516001600160a01b0381168103610070576080526040516105cb908161008c8239608051818181606c01526101f90152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe604060808152600436101561001357600080fd5b600090813560e01c8063879849de146101b45763b585bb311461003557600080fd5b6100599061004236610285565b939291610053959195368688610364565b906104bb565b82516320487ded60e01b815260209291907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316908481806100a68688600484016103eb565b0381855afa9081156101aa5790859392918a91610173575b5086516396f4e9f960e01b815294859384929183916100e091600484016103eb565b03925af180156101695761013b575b5082807fc1f432184cc790d4f6c377d85d77d7dcabf3f2bc89888cb2813fa72ef7e9255a958451958487958652850152848401378181018301869052601f01601f19168101030190a180f35b8190813d8311610162575b6101508183610342565b8101031261015e57386100ef565b8480fd5b503d610146565b83513d88823e3d90fd5b84819592503d83116101a3575b61018a8183610342565b8101031261019f5791518492906100e06100be565b8880fd5b503d610180565b86513d8b823e3d90fd5b5034610281576101f59060206100536101da6101cf36610285565b949192943691610364565b83516320487ded60e01b8152948592839290600484016103eb565b03817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa91821561027757839261023b575b6020838351908152f35b9091506020813d60201161026f575b8161025760209383610342565b8101031261026b5760209250519038610231565b8280fd5b3d915061024a565b81513d85823e3d90fd5b5080fd5b60606003198201126102ef5767ffffffffffffffff60043581811681036102ef57926024356001600160a01b03811681036102ef5792604435908382116102ef57806023830112156102ef5781600401359384116102ef57602484830101116102ef576024019190565b600080fd5b60a0810190811067ffffffffffffffff82111761031057604052565b634e487b7160e01b600052604160045260246000fd5b6020810190811067ffffffffffffffff82111761031057604052565b90601f8019910116810190811067ffffffffffffffff82111761031057604052565b92919267ffffffffffffffff8211610310576040519161038e601f8201601f191660200184610342565b8294818452818301116102ef578281602093846000960137010152565b919082519283825260005b8481106103d7575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016103b6565b9092919267ffffffffffffffff60409116825260209160408382015261041d855160a0604084015260e08301906103ab565b916104398487015193603f1994858583030160608601526103ab565b604087015194848483030160808501528080875193848152019601926000905b83821061049257505050505060c0608061048f959660018060a01b0360608201511660a0850152015192828503019101526103ab565b90565b845180516001600160a01b03168952830151888401529687019693820193600190910190610459565b9060408051916104ca836102f4565b60609081845281602085015281838501528160806000958683820152015282519460018060a01b03166020860152602085528285019085821067ffffffffffffffff83111761058157906105438661053187959484885260208684015260808301906103ab565b03605f1981018352603f190182610342565b83519061054f82610326565b83825284519661055e886102f4565b8752602087015283860152840152519061057782610326565b8152608082015290565b634e487b7160e01b85526041600452602485fdfea26469706673582212209dab8e3378cfe4fc09d53e2b290eb674edbabde9db3cc1a3d459b2501fe9aa3064736f6c634300081700330000000000000000000000001035cabc275068e0f4b745a29cedf38e13af41b1","gas":"381069","from":"0xaF7E68bCb2Fc7295492A00177f14F59B92814e70","transactionSettings":{"chainId":80001,"nonce":"579","baseFee":"1916855887","priorityFee":"1000000000"},"salt":"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000PINGPONG","artifact":{"abi":[{"type":"constructor","inputs":[{"name":"_router","type":"address","internalType":"contract IRouterClient"}],"stateMutability":"nonpayable"},{"type":"function","name":"quote","inputs":[{"name":"_chain","type":"uint64","internalType":"uint64"},{"name":"_receiver","type":"address","internalType":"address"},{"name":"_info","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"sendPing","inputs":[{"name":"_chain","type":"uint64","internalType":"uint64"},{"name":"_receiver","type":"address","internalType":"address"},{"name":"_info","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"payable"},{"type":"event","name":"Ping","inputs":[{"name":"info","type":"string","indexed":false,"internalType":"string"}],"anonymous":false}],"bytecode":"0x60a03461007057601f61065738819003918201601f19168301916001600160401b038311848410176100755780849260209460405283398101031261007057516001600160a01b0381168103610070576080526040516105cb908161008c8239608051818181606c01526101f90152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe604060808152600436101561001357600080fd5b600090813560e01c8063879849de146101b45763b585bb311461003557600080fd5b6100599061004236610285565b939291610053959195368688610364565b906104bb565b82516320487ded60e01b815260209291907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316908481806100a68688600484016103eb565b0381855afa9081156101aa5790859392918a91610173575b5086516396f4e9f960e01b815294859384929183916100e091600484016103eb565b03925af180156101695761013b575b5082807fc1f432184cc790d4f6c377d85d77d7dcabf3f2bc89888cb2813fa72ef7e9255a958451958487958652850152848401378181018301869052601f01601f19168101030190a180f35b8190813d8311610162575b6101508183610342565b8101031261015e57386100ef565b8480fd5b503d610146565b83513d88823e3d90fd5b84819592503d83116101a3575b61018a8183610342565b8101031261019f5791518492906100e06100be565b8880fd5b503d610180565b86513d8b823e3d90fd5b5034610281576101f59060206100536101da6101cf36610285565b949192943691610364565b83516320487ded60e01b8152948592839290600484016103eb565b03817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa91821561027757839261023b575b6020838351908152f35b9091506020813d60201161026f575b8161025760209383610342565b8101031261026b5760209250519038610231565b8280fd5b3d915061024a565b81513d85823e3d90fd5b5080fd5b60606003198201126102ef5767ffffffffffffffff60043581811681036102ef57926024356001600160a01b03811681036102ef5792604435908382116102ef57806023830112156102ef5781600401359384116102ef57602484830101116102ef576024019190565b600080fd5b60a0810190811067ffffffffffffffff82111761031057604052565b634e487b7160e01b600052604160045260246000fd5b6020810190811067ffffffffffffffff82111761031057604052565b90601f8019910116810190811067ffffffffffffffff82111761031057604052565b92919267ffffffffffffffff8211610310576040519161038e601f8201601f191660200184610342565b8294818452818301116102ef578281602093846000960137010152565b919082519283825260005b8481106103d7575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016103b6565b9092919267ffffffffffffffff60409116825260209160408382015261041d855160a0604084015260e08301906103ab565b916104398487015193603f1994858583030160608601526103ab565b604087015194848483030160808501528080875193848152019601926000905b83821061049257505050505060c0608061048f959660018060a01b0360608201511660a0850152015192828503019101526103ab565b90565b845180516001600160a01b03168952830151888401529687019693820193600190910190610459565b9060408051916104ca836102f4565b60609081845281602085015281838501528160806000958683820152015282519460018060a01b03166020860152602085528285019085821067ffffffffffffffff83111761058157906105438661053187959484885260208684015260808301906103ab565b03605f1981018352603f190182610342565b83519061054f82610326565b83825284519661055e886102f4565b8752602087015283860152840152519061057782610326565b8152608082015290565b634e487b7160e01b85526041600452602485fdfea26469706673582212209dab8e3378cfe4fc09d53e2b290eb674edbabde9db3cc1a3d459b2501fe9aa3064736f6c63430008170033","compiler":{"version":"v0.8.23+commit.f704f362"},"contractName":"src/CrossChainGovernanceSender.sol:CrossChainGovernanceSender","license":"MIT","jsonDescription":{"language":"Solidity","sources":{"lib/ccip/Client.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// End consumer library.\nlibrary Client {\n    /// @dev RMN depends on this struct, if changing, please notify the RMN maintainers.\n    struct EVMTokenAmount {\n        address token; // token address on the local chain.\n        uint256 amount; // Amount of tokens.\n    }\n\n    struct Any2EVMMessage {\n        bytes32 messageId; // MessageId corresponding to ccipSend on source.\n        uint64 sourceChainSelector; // Source chain selector.\n        bytes sender; // abi.decode(sender) if coming from an EVM chain.\n        bytes data; // payload sent in original message.\n        EVMTokenAmount[] destTokenAmounts; // Tokens and their amounts in their destination chain representation.\n    }\n\n    // If extraArgs is empty bytes, the default is 200k gas limit.\n    struct EVM2AnyMessage {\n        bytes receiver; // abi.encode(receiver address) for dest EVM chains\n        bytes data; // Data payload\n        EVMTokenAmount[] tokenAmounts; // Token transfers\n        address feeToken; // Address of feeToken. address(0) means you will send msg.value.\n        bytes extraArgs; // Populate this with _argsToBytes(EVMExtraArgsV1)\n    }\n\n    // bytes4(keccak256(\"CCIP EVMExtraArgsV1\"));\n    bytes4 public constant EVM_EXTRA_ARGS_V1_TAG = 0x97a657c9;\n\n    struct EVMExtraArgsV1 {\n        uint256 gasLimit;\n    }\n\n    function _argsToBytes(EVMExtraArgsV1 memory extraArgs) internal pure returns (bytes memory bts) {\n        return abi.encodeWithSelector(EVM_EXTRA_ARGS_V1_TAG, extraArgs);\n    }\n}\n"},"lib/ccip/IRouterClient.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {Client} from \"./Client.sol\";\n\ninterface IRouterClient {\n    error UnsupportedDestinationChain(uint64 destChainSelector);\n    error InsufficientFeeTokenAmount();\n    error InvalidMsgValue();\n\n    /// @notice Checks if the given chain ID is supported for sending/receiving.\n    /// @param chainSelector The chain to check.\n    /// @return supported is true if it is supported, false if not.\n    function isChainSupported(uint64 chainSelector) external view returns (bool supported);\n\n    /// @notice Gets a list of all supported tokens which can be sent or received\n    /// to/from a given chain id.\n    /// @param chainSelector The chainSelector.\n    /// @return tokens The addresses of all tokens that are supported.\n    function getSupportedTokens(uint64 chainSelector) external view returns (address[] memory tokens);\n\n    /// @param destinationChainSelector The destination chainSelector\n    /// @param message The cross-chain CCIP message including data and/or tokens\n    /// @return fee returns execution fee for the message\n    /// delivery to destination chain, denominated in the feeToken specified in the message.\n    /// @dev Reverts with appropriate reason upon invalid message.\n    function getFee(uint64 destinationChainSelector, Client.EVM2AnyMessage memory message)\n        external\n        view\n        returns (uint256 fee);\n\n    /// @notice Request a message to be sent to the destination chain\n    /// @param destinationChainSelector The destination chain ID\n    /// @param message The cross-chain CCIP message including data and/or tokens\n    /// @return messageId The message ID\n    /// @dev Note if msg.value is larger than the required fee (from getFee) we accept\n    /// the overpayment with no refund.\n    /// @dev Reverts with appropriate reason upon invalid message.\n    function ccipSend(uint64 destinationChainSelector, Client.EVM2AnyMessage calldata message)\n        external\n        payable\n        returns (bytes32);\n}\n"},"src/CrossChainGovernanceSender.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {IRouterClient, Client} from \"../lib/ccip/IRouterClient.sol\";\n\ncontract CrossChainGovernanceSender {\n    event Ping(string info);\n\n    IRouterClient internal immutable router;\n\n    constructor(IRouterClient _router) {\n        router = _router;\n    }\n\n    function quote(uint64 _chain, address _receiver, string calldata _info) external view returns (uint256) {\n        Client.EVM2AnyMessage memory message = createMessage(_receiver, _info);\n        return router.getFee(_chain, message);\n    }\n\n    function sendPing(uint64 _chain, address _receiver, string calldata _info) external payable {\n        Client.EVM2AnyMessage memory message = createMessage(_receiver, _info);\n        uint256 fee = router.getFee(_chain, message);\n        router.ccipSend{value: fee}(_chain, message);\n        emit Ping(_info);\n    }\n\n    function createMessage(address _receiver, string memory _info)\n        internal\n        pure\n        returns (Client.EVM2AnyMessage memory)\n    {\n        return Client.EVM2AnyMessage({\n            receiver: abi.encode(_receiver),\n            data: abi.encode(_info),\n            tokenAmounts: new Client.EVMTokenAmount[](0),\n            extraArgs: \"\",\n            feeToken: address(0)\n        });\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"remappings":["@layerzerolabs/lz-evm-protocol-v2/contracts/=lib/LayerZero-v2/protocol/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ccip/=lib/ccip/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"viaIR":true},"evmVersion":"paris","metadata":{"useLiteralContent":true}}},"source":"/home/plopmenz/crosschain-governance","submitted":{"transactionHash":"0x8fba0d5b109f63278f07b605b89817d644a34fc069ef99f1f6fdd3f53e23b44b","date":"2024-03-14T21:20:49.593Z"}}